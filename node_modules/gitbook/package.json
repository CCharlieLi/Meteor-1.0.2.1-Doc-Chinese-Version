{
  "name": "gitbook",
  "version": "1.5.0",
  "homepage": "http://www.gitbook.io/",
  "description": "Library and cmd utility to generate GitBooks",
  "main": "lib/index.js",
  "dependencies": {
    "q": "1.0.1",
    "lodash": "2.4.1",
    "kramed": "0.4.3",
    "kramed-text-renderer": "0.2.1",
    "lunr": "0.5.2",
    "swig": "1.3.2",
    "send": "0.2.0",
    "fstream-ignore": "0.0.7",
    "commander": "2.2.0",
    "graceful-fs": "3.0.2",
    "fs-extra": "0.10.0",
    "highlight.js": "8.3.0",
    "tmp": "0.0.23",
    "semver": "2.2.1",
    "npmi": "0.1.1",
    "gaze": "~0.5.1",
    "resolve": "0.6.3",
    "tiny-lr-fork": "0.0.5",
    "gitbook-plugin": "0.0.2",
    "gitbook-plugin-mathjax": "0.0.6",
    "gitbook-plugin-livereload": "0.0.1",
    "gitbook-plugin-exercises": "1.0.0",
    "gitbook-plugin-quizzes": "1.0.0"
  },
  "devDependencies": {
    "mocha": "1.18.2",
    "grunt": "~0.4.2",
    "grunt-cli": "0.1.11",
    "grunt-contrib-copy": "0.5.0",
    "grunt-contrib-less": "~0.5.0",
    "grunt-contrib-requirejs": "0.4.1",
    "grunt-bower-install-simple": "0.9.2",
    "grunt-browserify": "3.1.0",
    "grunt-contrib-uglify": "0.6.0"
  },
  "scripts": {
    "test": "export TESTING=true; mocha --reporter list"
  },
  "bin": {
    "gitbook": "./bin/gitbook.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/GitbookIO/gitbook.git"
  },
  "keywords": [
    "git",
    "book",
    "gitbook"
  ],
  "author": {
    "name": "FriendCode",
    "email": "contact@friendco.de"
  },
  "license": "Apache 2",
  "bugs": {
    "url": "https://github.com/GitbookIO/gitbook/issues"
  },
  "contributors": [
    {
      "name": "Aaron O'Mullan",
      "email": "aaron.omullan@gmail.com"
    },
    {
      "name": "Samy Pessé",
      "email": "samypesse@gmail.com"
    }
  ],
  "readme": "GitBook\n=======\n\n[![Build Status](https://travis-ci.org/GitbookIO/gitbook.png?branch=master)](https://travis-ci.org/GitbookIO/gitbook)\n[![NPM version](https://badge.fury.io/js/gitbook.svg)](http://badge.fury.io/js/gitbook)\n\nGitBook is a command line tool (and Node.js library) for building beautiful books using GitHub/Git and Markdown. Here is an example: [Learn Javascript](https://www.gitbook.io/book/GitBookIO/javascript). You can publish book easily online using [gitbook.io](https://www.gitbook.io) and an [editor](https://github.com/GitbookIO/editor) is available for Windows, Mac and Linux. You can follow [@GitBookIO](https://twitter.com/GitBookIO) on Twitter. Complete documentation is available at [help.gitbook.io](http://help.gitbook.io/).\n\n![Image](https://raw.github.com/GitbookIO/gitbook/master/preview.png)\n\n## How to use it:\n\nGitBook can be installed from **NPM** using:\n\n```\n$ npm install gitbook -g\n```\n\nCreate the directories and files for a book from its [SUMMARY.md](https://github.com/GitbookIO/gitbook#book-format) file using \n```\n$ gitbook init\n```\n\nYou can serve a repository as a book using:\n\n```\n$ gitbook serve ./repository\n```\n\nOr simply build the static website using:\n\n```\n$ gitbook build ./repository --output=./outputFolder\n```\n\nOptions for commands `build` and `serve` are:\n\n```\n-o, --output <directory>  Path to output directory, defaults to ./_book\n-f, --format <name>       Change generation format, defaults to site, availables are: site, page, ebook, json\n--config <config file>    Configuration file to use, defaults to book.js or book.json\n```\n\nGitBook loads the default configuration from a `book.json` file in the repository if it exists.\n\nHere are the options that can be stored in this file:\n\n```js\n{\n    // Folders to use for output\n    // Caution: it overrides the value from the command line\n    // It's not advised this option in the book.json\n    \"output\": null,\n\n    // Generator to use for building\n    // Caution: it overrides the value from the command line\n    // It's not advised this option in the book.json\n    \"generator\": \"site\",\n\n    // Book metadats (somes are extracted from the README by default)\n    \"title\": null,\n    \"description\": null,\n    \"isbn\": null,\n\n    // For ebook format, the extension to use for generation (default is detected from output extension)\n    // \"epub\", \"pdf\", \"mobi\"\n    // Caution: it overrides the value from the command line\n    // It's not advised this option in the book.json\n    \"extension\": null,\n\n    // Plugins list, can contain \"-name\" for removing default plugins\n    \"plugins\": [],\n\n    // Global configuration for plugins\n    \"pluginsConfig\": {\n        \"fontSettings\": {\n            \"theme\": \"sepia\", \"night\" or \"white\",\n            \"family\": \"serif\" or \"sans\",\n            \"size\": 1 to 4\n        }\n    },\n\n    // Variables for templating\n    \"variables\": {},\n\n    // Links in template (null: default, false: remove, string: new value)\n    \"links\": {\n    \t// Custom links at top of sidebar\n    \t\"sidebar\": {\n    \t    \"Custom link name\": \"https://customlink.com\"\n    \t},\n\n        // Sharing links\n        \"sharing\": {\n            \"google\": null,\n            \"facebook\": null,\n            \"twitter\": null,\n            \"weibo\": null,\n            \"all\": null\n        }\n    },\n\n\n    // Options for PDF generation\n    \"pdf\": {\n        // Add page numbers to the bottom of every page\n        \"pageNumbers\": false,\n\n        // Font size for the fiel content\n        \"fontSize\": 12,\n\n        // Paper size for the pdf\n        // Choices are [u’a0’, u’a1’, u’a2’, u’a3’, u’a4’, u’a5’, u’a6’, u’b0’, u’b1’, u’b2’, u’b3’, u’b4’, u’b5’, u’b6’, u’legal’, u’letter’]\n        \"paperSize\": \"a4\",\n\n        // Margin (in pts)\n        // Note: 72 pts equals 1 inch\n        \"margin\": {\n            \"right\": 62,\n            \"left\": 62,\n            \"top\": 36,\n            \"bottom\": 36\n        },\n\n        //Header HTML template. Available variables: _PAGENUM_, _TITLE_, _AUTHOR_ and _SECTION_.\n        \"headerTemplate\": null,\n\n        //Footer HTML template. Available variables: _PAGENUM_, _TITLE_, _AUTHOR_ and _SECTION_.\n        \"footerTemplate\": null\n    }\n}\n```\n\nYou can publish your books to our index by visiting [GitBook.io](http://www.gitbook.io)\n\n## Output Formats\n\nGitBook can generate your book in the following formats:\n\n* **Static Website**: This is the default format. It generates a complete interactive static website that can be, for example, hosted on GitHub Pages.\n* **eBook**: A complete eBook with exercise solutions at the end of the book.  You need to have [ebook-convert](http://manual.calibre-ebook.com/cli/ebook-convert.html) installed.  You can specify the eBook filename with the `-o` option, otherwise `book` will be used.\n  * Generate a **PDF** using:  `gitbook pdf ./myrepo`\n  * Generate a **ePub** using: `gitbook epub ./myrepo`\n  * Generate a **MOBI** using: `gitbook mobi ./myrepo`\n* **JSON**: This format is used for debugging or extracting metadata from a book. Generate this format using: ```gitbook build ./myrepo -f json```.\n\n## Book Format\n\nA book is a Git repository containing at least 2 files: `README.md` and `SUMMARY.md`.\n\n#### README.md\n\nTypically, this should be the introduction for your book. It will be automatically added to the final summary.\n\n#### SUMMARY.md\n\nThe `SUMMARY.md` defines your book's structure. It should contain a list of chapters, linking to their respective pages.\n\nExample:\n\n```markdown\n# Summary\n\nThis is the summary of my book.\n\n* [section 1](section1/README.md)\n    * [example 1](section1/example1.md)\n    * [example 2](section1/example2.md)\n* [section 2](section2/README.md)\n    * [example 1](section2/example1.md)\n```\n\nFiles that are not included in `SUMMARY.md` will not be processed by `gitbook`.\n\n#### Multi-Languages\n\nGitBook supports building books written in multiple languages. Each language should be a sub-directory following the normal GitBook format, and a file named `LANGS.md` should be present at the root of the repository with the following format:\n\n```markdown\n* [English](en/)\n* [French](fr/)\n* [Español](es/)\n```\n\nYou can see a complete example with the [Learn Git](https://github.com/GitbookIO/git) book.\n\n#### Glossary\n\nAllows you to specify terms and their respective definitions to be displayed in the glossary. Based on those terms, `gitbook` will automatically build an index and highlight those terms in pages.\n\nThe `GLOSSARY.md` format is very simple :\n\n```markdown\n# term\nDefinition for this term\n\n# Another term\nWith it's definition, this can contain bold text and all other kinds of inline markup ...\n\n```\n\n#### Ignoring files & folders\n\nGitBook will read the `.gitignore`, `.bookignore` and `.ignore` files to get a list of files and folders to skip. (The format inside those files follows the same convention as `.gitignore`).\n\nBest practices for the `.gitignore` is to ignore build files from **node.js** (`node_modules`, ...) and build files from GitBook: `_book`, `*.epub`, `*.mobi` and `*.pdf` ([Download GitBook.gitignore](https://github.com/github/gitignore/blob/master/GitBook.gitignore)).\n\n#### Cover\n\nA cover image can be set by creating a file: **/cover.jpg**.\nThe best resolution is **1800x2360**. The generation of the cover can be done automatically using the plugin [autocover](https://github.com/GitbookIO/plugin-autocover).\n\nA small version of the cover can also be set by creating a file: **/cover_small.jpg**.\n\n#### Publish your book\n\nThe platform [GitBook.io](https://www.gitbook.io/) is like an \"Heroku for books\": you can create a book on it (public, paid, or private) and update it using **git push**.\n\n#### Plugins\n\nPlugins can be used to extend your book's functionality. Read [GitbookIO/plugin](https://github.com/GitbookIO/plugin) for more information about how to build a plugin for GitBook.\n\nPlugins needed to build a book can be installed using: `gitbook install ./`.\n\n##### Official plugins:\n\n| Name | Description |\n| ----- | ---- |\n| [exercises](https://github.com/GitbookIO/plugin-exercises) | Add interactive exercises to your book. |\n| [quizzes](https://github.com/GitbookIO/plugin-quizzes) | Add interactive quizzes to your book. |\n| [mathjax](https://github.com/GitbookIO/plugin-mathjax) | Displays mathematical notation in the book. |\n| [mixpanel](https://github.com/GitbookIO/plugin-mixpanel) | Mixpanel tracking for your book |\n| [infinitescroll](https://github.com/GitbookIO/gitbook-plugin-infinitescroll) | Infinite Scrolling |\n\n##### Other plugins:\n\n| Name | Description |\n| ----- | ---- |\n| [Google Analytics](https://github.com/GitbookIO/plugin-ga) | Google Analytics tracking for your book |\n| [Disqus](https://github.com/GitbookIO/plugin-disqus) | Disqus comments integration in your book |\n| [Autocover](https://github.com/GitbookIO/plugin-autocover) | Generate a cover for your book |\n| [Transform annoted quotes to notes](https://github.com/erixtekila/gitbook-plugin-richquotes) | Allow extra markdown markup to render blockquotes as nice notes |\n| [Send code to console](https://github.com/erixtekila/gitbook-plugin-toconsole) | Evaluate javascript block in the browser inspector's console |\n| [Revealable sections](https://github.com/mrpotes/gitbook-plugin-reveal) | Reveal sections of the page using buttons made from the first title in each section |\n| [Markdown within HTML](https://github.com/mrpotes/gitbook-plugin-nestedmd) | Process markdown within HTML blocks - allows custom layout options for individual pages |\n| [Bootstrap JavaScript plugins](https://github.com/mrpotes/gitbook-plugin-bootstrapjs) | Use the [Bootstrap JavaScript plugins](http://getbootstrap.com/javascript) in your online GitBook |\n| [Piwik Open Analytics](https://github.com/emmanuel-keller/gitbook-plugin-piwik) | Piwik Open Analytics tracking for your book |\n| [Heading Anchors](https://github.com/rlmv/gitbook-plugin-anchors) | Add linkable Github-style anchors to headings |\n| [JSBin](https://github.com/jcouyang/gitbook-plugin-jsbin) | Embedded jsbin frame into your book |\n| [gitbook-grvis](https://github.com/romanlytkin/gitbook-grvis) | Gitbook GrViz plugin is used to select from markdown dot and converting it into a picture format svg |\n| [gitbook-plantuml](https://github.com/romanlytkin/gitbook-plantuml) | Gitbook PlantUml plugin is used to select from markdown uml and converting it into a picture format svg |\n\n#### Debugging\n\nYou can use the environment variable `DEBUG=true` to get better error messages (with stack trace). For example:\n\n```\n$ export DEBUG=true\n$ gitbook build ./\n```\n",
  "readmeFilename": "README.md",
  "_id": "gitbook@1.5.0",
  "_from": "gitbook@"
}
